term.write("Do you want to make it compatible with NukeLoader? ")
compatible = read()
if compatible == "Yes" or compatible == "yes" or compatible == "y" or compatible == "Y" then
 hasToBeCompatible = true
 root = "/os/"
 start = "NukeOS"
elseif compatible == "No" or compatible == "no" or compatible == "n" or compatible == "N" then
 hasToBeCompatible = false
 root = "/"
 term.write("Do you want the executable as startup? ")
 print("Y/N")
 startup = read()
 if startup == "y" or startup == "Y" then
  start = "startup"
  fs.delete("startup")
 elseif startup == "n" or startup == "N" then
  start = "NukeOS"
 end
end
if fs.exists(root..".NukeOS") then
 term.clear()
 term.setCursorPos(1,1)
 term.setTextColor(colors.red)
 print("WARNING! You already have NukeOS, do you")
 print("want to delete it and install it again?")
 term.setTextColor(colors.white)
 print("1- Yes")
 print("2- No")
 conf = read()
 if conf == "1" then
  fs.delete(root..".NukeOS")
  fs.delete(root.."NukeOS")
 elseif conf == "2" then
  print("Installation canceled")
  return
 end
else
 fs.makeDir(root..".NukeOS")
end

local function clear()
	term.clear()
	term.setCursorPos(1, 1)
end

local function get(user, repo, bran, path, save)
	if not user or not repo or not bran or not path then
		error("not enough arguments, expected 4 or 5", 2)
	end
    local url = "https://raw.github.com/"..user.."/"..repo.."/"..bran.."/"..path
	local remote = http.get(url)
	if not remote then
		return false
	end
	local text = remote.readAll()
	remote.close()
	if save then
		local file = fs.open(save, "w")
		file.write(text)
		file.close()
		return true
	end
	return text
end

local function getFile(file, target)
	return get("Abelatox", "NukeOS", "master", file, target)
end

shell.setDir("")

clear()
local files = {
 ["NukeOS"] = root..start,
 [".NukeOS/load"] = root..".NukeOS/load",
 [".NukeOS/login"] = root..".NukeOS/login",
 [".NukeOS/bg"] = root..".NukeOS/bg",
 [".NukeOS/NukeChat"] = root..".NukeOS/NukeChat",
 [".NukeOS/chatimg"] = root..".NukeOS/chatimg",
 [".NukeOS/NukeOS_Login"] = root..".NukeOS/NukeOS_Login",
 [".NukeOS/NukeOS_Desktop"] = root..".NukeOS/NukeOS_Desktop",
}

local fileCount = 0
for _ in pairs(files) do
 fileCount = fileCount + 1
end
local filesDownloaded = 0
for k, v in pairs(files) do
 term.setTextColor(colors.black)
 term.setBackgroundColor(colors.white)
 clear()
 term.setCursorPos(2, 2)
 print("Installing NukeOS")
 term.setCursorPos(2, 4)
 print("File: "..v)
 local w, h = term.getSize()
 term.setCursorPos(2, h - 1)
 print(tostring(math.floor(filesDownloaded / fileCount * 100)).."% - "..tostring(filesDownloaded + 1).."/"..tostring(fileCount))
 local ok = getFile(k, v)
 if not ok then
  if term.isColor() then
   term.setTextColor(colors.red)
  end
  term.setCursorPos(2, 6)
  print("Error.")
  sleep(1)
 end
 filesDownloaded = filesDownloaded + 1
end
term.setTextColor(colors.white)
term.setBackgroundColor(colors.black)
clear()
